<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacewall__follow__service" kind="namespace" language="Python">
    <compoundname>wall_follow_service</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacewall__follow__service_1ad909574f259c916146de0367c7706e36" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool wall_follow_service.active_</definition>
        <argsstring></argsstring>
        <name>active_</name>
        <initializer>=  False</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/workspace2/src/ResearchTrack1_Assignment2/Assignment2/scripts/wall_follow_service.py" line="23" column="1" bodyfile="/root/workspace2/src/ResearchTrack1_Assignment2/Assignment2/scripts/wall_follow_service.py" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacewall__follow__service_1af90deadd716ff3782b83a6a3d9152585" prot="public" static="no" mutable="no">
        <type></type>
        <definition>wall_follow_service.pub_</definition>
        <argsstring></argsstring>
        <name>pub_</name>
        <initializer>=  None</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/workspace2/src/ResearchTrack1_Assignment2/Assignment2/scripts/wall_follow_service.py" line="25" column="1" bodyfile="/root/workspace2/src/ResearchTrack1_Assignment2/Assignment2/scripts/wall_follow_service.py" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacewall__follow__service_1ab578b170aebbf718a0237e84d002876f" prot="public" static="no" mutable="no">
        <type>dictionary</type>
        <definition>dictionary wall_follow_service.regions_</definition>
        <argsstring></argsstring>
        <name>regions_</name>
        <initializer>=  {
    &apos;right&apos;: 0,
    &apos;fright&apos;: 0,
    &apos;front&apos;: 0,
    &apos;fleft&apos;: 0,
    &apos;left&apos;: 0,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/workspace2/src/ResearchTrack1_Assignment2/Assignment2/scripts/wall_follow_service.py" line="26" column="1" bodyfile="/root/workspace2/src/ResearchTrack1_Assignment2/Assignment2/scripts/wall_follow_service.py" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacewall__follow__service_1aa57f38071ffa0bc40246d2287613be64" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int wall_follow_service.state_</definition>
        <argsstring></argsstring>
        <name>state_</name>
        <initializer>=  0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/workspace2/src/ResearchTrack1_Assignment2/Assignment2/scripts/wall_follow_service.py" line="33" column="1" bodyfile="/root/workspace2/src/ResearchTrack1_Assignment2/Assignment2/scripts/wall_follow_service.py" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacewall__follow__service_1aa31ff1bd4c42cb00736568f9b7a8e0d0" prot="public" static="no" mutable="no">
        <type>dictionary</type>
        <definition>dictionary wall_follow_service.state_dict_</definition>
        <argsstring></argsstring>
        <name>state_dict_</name>
        <initializer>=  {
    0: &apos;find the wall&apos;,
    1: &apos;turn left&apos;,
    2: &apos;follow the wall&apos;,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/workspace2/src/ResearchTrack1_Assignment2/Assignment2/scripts/wall_follow_service.py" line="34" column="1" bodyfile="/root/workspace2/src/ResearchTrack1_Assignment2/Assignment2/scripts/wall_follow_service.py" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacewall__follow__service_1aa62fc1c79bf46bcbfc6cfa338feb1bc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def wall_follow_service.wall_follower_switch</definition>
        <argsstring>(req)</argsstring>
        <name>wall_follower_switch</name>
        <param>
          <type>req</type>
          <defname>req</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Service callback function to switch the wall follower on or off.
This function is a service callback that handles the switching on or off of the wall follower behavior.
It takes a request message &apos;req&apos; as input.
It updates the global variable &apos;active_&apos; based on the value of &apos;req.data&apos;.
It returns a response message indicating the success of the switch operation.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/workspace2/src/ResearchTrack1_Assignment2/Assignment2/scripts/wall_follow_service.py" line="41" column="1" bodyfile="/root/workspace2/src/ResearchTrack1_Assignment2/Assignment2/scripts/wall_follow_service.py" bodystart="41" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="namespacewall__follow__service_1a081b7835272ee06e51efdce2918f19f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def wall_follow_service.clbk_laser</definition>
        <argsstring>(msg)</argsstring>
        <name>clbk_laser</name>
        <param>
          <type>msg</type>
          <defname>msg</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Callback function for the laser scan subscriber.
This is a callback function for laser scan subscriber.
It receives a LaserScan message &apos;msg&apos; as input.
It extracts the ranges from the laser scan message and assigns them to the &apos;regions_&apos; dictionary, representing different regions of the robot&apos;s surroundings.
It then calls the &apos;take_action()&apos; function to perform appropriate actions based on the current regions.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/workspace2/src/ResearchTrack1_Assignment2/Assignment2/scripts/wall_follow_service.py" line="58" column="1" bodyfile="/root/workspace2/src/ResearchTrack1_Assignment2/Assignment2/scripts/wall_follow_service.py" bodystart="58" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="namespacewall__follow__service_1a78f097ddc9b97580d9f54d95f9c0e321" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def wall_follow_service.change_state</definition>
        <argsstring>(state)</argsstring>
        <name>change_state</name>
        <param>
          <type>state</type>
          <defname>state</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Function to change the state of the wall follower.
This function changes the state of the wall follower behavior.
It takes the new state as input.
It updates the global variable &apos;state_&apos; with the new state.
If the state has changed, it prints a message indicating the current state.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/workspace2/src/ResearchTrack1_Assignment2/Assignment2/scripts/wall_follow_service.py" line="79" column="1" bodyfile="/root/workspace2/src/ResearchTrack1_Assignment2/Assignment2/scripts/wall_follow_service.py" bodystart="79" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="namespacewall__follow__service_1abf15ac3f10e8607383ca78f3056c8a14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def wall_follow_service.take_action</definition>
        <argsstring>()</argsstring>
        <name>take_action</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Function to take action based on the laser scan regions.
This function determines the action to be taken based on the current regions of the laser scan.
It calculates various distance thresholds (&apos;d0&apos; and &apos;d&apos;) to define different cases.
Based on the values of the regions, it selects the appropriate case and changes the state using the &apos;change_state()&apos; function.
The function prints the state description for debugging purposes.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/workspace2/src/ResearchTrack1_Assignment2/Assignment2/scripts/wall_follow_service.py" line="94" column="1" bodyfile="/root/workspace2/src/ResearchTrack1_Assignment2/Assignment2/scripts/wall_follow_service.py" bodystart="94" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="namespacewall__follow__service_1ad468da59b5a24f5e71d1f8c6381c5384" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def wall_follow_service.find_wall</definition>
        <argsstring>()</argsstring>
        <name>find_wall</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Function to control the robot&apos;s movement to find the wall.
This function generates a &apos;Twist&apos; message to control the robot&apos;s movement to find the wall.
It sets a linear velocity &apos;msg.linear.x&apos; to 0.2 and an angular velocity &apos;msg.angular.z&apos; to -0.3, causing the robot to move forward while slightly turning to the left.
It returns the generated &apos;Twist&apos; message.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/workspace2/src/ResearchTrack1_Assignment2/Assignment2/scripts/wall_follow_service.py" line="143" column="1" bodyfile="/root/workspace2/src/ResearchTrack1_Assignment2/Assignment2/scripts/wall_follow_service.py" bodystart="143" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="namespacewall__follow__service_1a47da44503aa8f452b553ccf419940d3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def wall_follow_service.turn_left</definition>
        <argsstring>()</argsstring>
        <name>turn_left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Function to control the robot&apos;s movement to turn left.
This function generates a &apos;Twist&apos; message to control the robot&apos;s movement to turn left.
It sets an angular velocity &apos;msg.angular.z&apos; to 0.3, causing the robot to rotate in place to the left.
It returns the generated &apos;Twist&apos; message.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/workspace2/src/ResearchTrack1_Assignment2/Assignment2/scripts/wall_follow_service.py" line="157" column="1" bodyfile="/root/workspace2/src/ResearchTrack1_Assignment2/Assignment2/scripts/wall_follow_service.py" bodystart="157" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="namespacewall__follow__service_1a333a30da2a8f24e46f7b900df6624d65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def wall_follow_service.follow_the_wall</definition>
        <argsstring>()</argsstring>
        <name>follow_the_wall</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Function to control the robot&apos;s movement to follow the wall.
This function generates a &apos;Twist&apos; message to control the robot&apos;s movement to follow the wall.
It sets a linear velocity &apos;msg.linear.x&apos; to 0.5, causing the robot to move forward at a moderate speed.
It returns the generated &apos;Twist&apos; message.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/workspace2/src/ResearchTrack1_Assignment2/Assignment2/scripts/wall_follow_service.py" line="170" column="1" bodyfile="/root/workspace2/src/ResearchTrack1_Assignment2/Assignment2/scripts/wall_follow_service.py" bodystart="170" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="namespacewall__follow__service_1af098a5a5d743dd6860f1403083e4b17d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def wall_follow_service.main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>This is the main function</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/workspace2/src/ResearchTrack1_Assignment2/Assignment2/scripts/wall_follow_service.py" line="185" column="1" bodyfile="/root/workspace2/src/ResearchTrack1_Assignment2/Assignment2/scripts/wall_follow_service.py" bodystart="185" bodyend="220"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>.. module:: wall_follow_service
    :platform: Unix
    :synopsis: Python module for the wall_follow_service

.. moduleauthor:: KERMADJ YOUNES s5447235@studenti.unige.it


This is a Python script that implements a wall follower behavior using laser scan data.
The robot navigates in an environment with walls and adjusts its movement to follow the contours of the walls.</verbatim> </para>
    </detaileddescription>
    <location file="/root/workspace2/src/ResearchTrack1_Assignment2/Assignment2/scripts/wall_follow_service.py" line="1" column="1"/>
  </compounddef>
</doxygen>
